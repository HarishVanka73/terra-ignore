pipeline {
    agent any
    stages {

        stage ('checkout SCM'){
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [],submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'git', url: 'https://github.com/HarishVanka73/terra-ignore.git']]])
            }
            
        }

        stage('set terraform path') {
            steps {
                script {
                    def tfHome = tool name: 'terraform'
                    env.PATH = "${Home}:${env.PATH}"
                }
            }
        }
        
        stage('terraform init') {

            steps {
                dir ("folder") {
                    script {
                        withAWS(roleAccount:'992382420802', role:'jenkins-role', useNode:true) {
                            sh 'terraform init -no-color'
                        }
                    }
                }
            }
        }

        stage('terraform plan') {
           
           steps {
               dir ("folder") {
                   script {
                       withAWS(roleAccount:'992382420802', role:'jenkins-role', useNode:true) {
                            sh 'terraform plan -no-color -out=plan.out'
                    }
            }
           }
        }
    }

    stage('waiting for Approvals') {

        steps {
            input('plan validated? please approve to create ec2 instances in aws?')
        }
    }

    stage('terraform apply') {
         
         steps {
            dir("folder") {

                script {
                    withAWS(roleAccount:'992382420802', role:'jenkins-role', useNode:true) {
                        sh 'terraform apply -no-color -auto-approve plan.out'
                        sh "terraform output"
                    }
                }
            }
         }
    }
}
}